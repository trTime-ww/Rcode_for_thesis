while (!n%%2) {
n <- n/2
i <- i+1
}
v <- c(v, n)
}
}
else {
while (n!=1) {
i <- i+1
if(n%%2) n <- 3*n + 1
else n <- n/2
v <- c(v, n)
}
}
return(list("num"=i,"data"=v))
}
collatz.bin <- function(n, omit=FALSE) {
if(n<=0) break
n <- as.integer(n)
i <- 0
v <- intToBin(n)
if(omit) {
while (n!=1) {
i <- i+1
if(n%%2) {
n <- 3*n + 1
i <- i+1
}
while (!n%%2) {
n <- n/2
i <- i+1
}
v <- c(v, intToBin(n))
}
}
else {
while (n!=1) {
i <- i+1
if(n%%2) n <- 3*n + 1
else n <- n/2
v <- c(v, intToBin(n))
}
}
return(list("num"=i,"data"=v))
}
collatz(37,omit = TRUE)
plot(collatz(27,omit = TRUE)$data)
plot(collatz(27,omit = FALSE)$data)
plot(collatz(27,omit = TRUE)$data)
collatz.bin(27,omit = TRUE)
collatz(17,omit = T)
collatz.bin(17,omit = T)
collatz.bin(27,omit = T)
collatz.bin(15,omit = T)
collatz.bin(63,omit = T)
collatz(63,omit = T)
collatz(3,omit = T)
collatz.bin(3,omit = T)
png("四分之一圆.png")
x <- seq(0, 1, 0.01)
y <- sqrt(1 - x^2)
plot(x, y, xlim = c(0, 1.5), ylim = c(0, 1.5), type = 'l')
abline(h = 0, col = "gray")
abline(v = 0, col = "gray")
segments(x0 = 0, y0 = 0, x1 = 1, y1 = 0)
segments(x0 = 0, y0 = 0, x1 = 0, y1 = 1)
segments(x0 = 1, y0 = 0, x1 = 1, y1 = 1)
segments(x0 = 0, y0 = 1, x1 = 1, y1 = 1)
polygon(c(0,x), c(0,y), col = "gray")
dev.off()
x <- seq(0, 1, 0.01)
y <- sqrt(1 - x^2)
plot(x, y, xlim = c(0, 1.5), ylim = c(0, 1.5), type = 'l')
abline(h = 0, col = "gray")
abline(v = 0, col = "gray")
segments(x0 = 0, y0 = 0, x1 = 1, y1 = 0)
segments(x0 = 0, y0 = 0, x1 = 0, y1 = 1)
segments(x0 = 1, y0 = 0, x1 = 1, y1 = 1)
segments(x0 = 0, y0 = 1, x1 = 1, y1 = 1)
polygon(c(0,x), c(0,y), col = "gray")
dev.off()
png("反正弦函数.png")
x <- seq(0, 1, 0.01)
y <- asin(x)
plot(x, y, xlim = c(0, 1.5), ylim = c(0, 2.4), type = 'l')
abline(h = 0, col = "gray")
abline(v = 0, col = "gray")
segments(x0 = 0, y0 = 0, x1 = 1, y1 = 0)
segments(x0 = 0, y0 = 0, x1 = 0, y1 = 2)
segments(x0 = 1, y0 = 0, x1 = 1, y1 = 2)
segments(x0 = 0, y0 = 2, x1 = 1, y1 = 2)
polygon(c(1,x), c(0,y), col = "gray")
plot(x, y, xlim = c(0, 1.5), ylim = c(0, 1.5), type = 'l')
library(asaur)
install.packages(asaur)
install.packages('asaur')
library(asaur)
nrow(gastricXelox)
ncol(gastricXelox)
sum(gastricXelox[,2])
sum(gastricXelox[,1])
32/2866
Z1. <- -83
Z2. <- -937
Z3. <- 1020
Sigma.est <- matrix(data = c(54503.7,-34806.2,-19697.6,-34806.2,73786.1,-38980.1,-19697.6,-38980.1,58677.7),ncol = 3)
Sigma.est
Sigma.est[1:2,1:2]
solve(2)
Z. <- c(Z1.,Z2.,Z3.)
t(Z.[1,2])%*%solve(Sigma.est[1:2,1:2])%*%Z.[1,2]
t(Z.[1:2])%*%solve(Sigma.est[1:2,1:2])%*%Z.[1:2]
t(Z.[2:3])%*%solve(Sigma.est[2:3,2:3])%*%Z.[2:3]
Z.[1,3]
Z.[c(1,3)]
t(Z.[c(1,3)])%*%solve(Sigma.est[c(1,3),c(1,3)])%*%Z.[c(1,3)]
race <- factor(c("black", "black", "white", "white", "other", "other"))
race
age <- c(48, 52, 87, 82, 67, 53)
model.matrix(race+age)
model.matrix(~race+age)
relevel
rexp(5)
rexp(5,c(0.1,1))
rexp(5,c(1,-1,1-1,1))
rexp(5,c(1,-1,1,-1,1))
rexp(5,c(1,0.1,1,0.1,1))
rexp(5,c(1,0.1,1,0.1,1))
ageGroup4
setwd("E:/R/gra_thesis")
library(survival)
rt <- c(2,3,3,4,4,5,6,7,8,9) # rt: recorded time
ct <- c(0,1,0,1,1,1,0,1,1,0) # ct: censored time
Surv(rt, ct)
result.KM <- survfit(Surv(rt, ct) ~ 1, conf.type="log-log")
# To compute confidence intervals based on log-log transformation
result.KM
summary(result.KM)
plot(result.KM)
result.NA <- survfit(Surv(rt, ct) ~ 1, conf.type = "log-log", type = "fh")
# Nelson-Aalen estimator. The letters “fh” are taken from the initials of
# Fleming and Harrington
Summary(result.NA)
result.NA <- survfit(Surv(rt, ct) ~ 1, conf.type = "log-log", type = "fh")
Summary(result.NA)
summary(result.NA)
result.NA
plot(result.NA)
head(gastricXelox)
library(asaur)
head(gastricXelox)
head(gastricXelox$)
head(gastricXelox$timeWeeks)
nrow(gastricXelox)
max(gastricXelox$timeWeeks)
result.KM.gas <- survfit(Surv(gastricXelox$timeWeeks, gastricXelox$delta) ~ 1,
conf.type = "log-log")
plot(result.KM.gas, conf.int=T, mark="|", xlab="Time in weeks",
ylab="Survival probability")
title("Progression-free Survival in Gastric Cancer Patients")
gastricXelox$delta=2
head(gastricXelox)
head(gastricXelox)
library(asaur) # the data set “gastricXelox” is in the “asaur” package
head(gastricXelox)
setwd("E:/R/gra_thesis")
library(survival)
rt <- c(2,3,3,4,4,5,6,7,8,9) # rt: recorded time
ct <- c(0,1,0,1,1,1,0,1,1,0) # ct: censored time
Surv(rt, ct) # produce a special structure for censored survival data
result.KM <- survfit(Surv(rt, ct) ~ 1, conf.type = "log-log")
# compute confidence intervals based on log-log transformation
result.KM
summary(result.KM) # see the full Kaplan-Meier estimate
plot(result.KM) # plot the Kaplan-Meier estimate curve
result.NA <- survfit(Surv(rt, ct) ~ 1, conf.type = "log-log", type = "fh")
# Nelson-Aalen estimator. The letters “fh” are taken from the initials of
# Fleming and Harrington
summary(result.NA)
plot(result.NA)
setwd("E:/R/gra_thesis")
library(survival)
num=30
rate=0.8
rt.exp <- rexp(num,rate) # rt: recorded time
ct.exp <-  rep(1,num)# ct: censored time
# produce a special structure for censored survival data
result.KM.exp <- survfit(Surv(rt.exp, ct.exp) ~ 1, conf.type = "log-log")
# compute confidence intervals based on log-log transformation
# summary(result.KM.exp) # see the full Kaplan-Meier estimate
plot(result.KM.exp) # plot the Kaplan-Meier estimate curve
par(new=TRUE)
curve(pexp(x, rate = rate, lower.tail = FALSE), from = 0, to = max(rt.exp), ylim=c(0,1))
par(new=FALSE)
plot(result.KM.exp) # plot the Kaplan-Meier estimate curve
abline(v=0.4, col='grey60')
par(new=TRUE)
curve(pexp(x, rate = rate, lower.tail = FALSE), from = 0, to = max(rt.exp), ylim=c(0,1))
par(new=FALSE)
plot(result.KM.exp) # plot the Kaplan-Meier estimate curve
abline(v=0.4, col='grey60',lty=2)
par(new=TRUE)
curve(pexp(x, rate = rate, lower.tail = FALSE), from = 0, to = max(rt.exp), ylim=c(0,1))
par(new=FALSE)
plot(result.KM.exp) # plot the Kaplan-Meier estimate curve
abline(v=0.4, col='blue',lty=2)
par(new=TRUE)
curve(pexp(x, rate = rate, lower.tail = FALSE), from = 0, to = max(rt.exp), ylim=c(0,1))
par(new=FALSE)
plot(result.KM.exp) # plot the Kaplan-Meier estimate curve
abline(v=0.4, col='red2',lty=2)
par(new=TRUE)
curve(pexp(x, rate = rate, lower.tail = FALSE), from = 0, to = max(rt.exp), ylim=c(0,1))
par(new=FALSE)
plot(result.KM.exp) # plot the Kaplan-Meier estimate curve
abline(v=0.4, col='red2',lty=3)
par(new=TRUE)
curve(pexp(x, rate = rate, lower.tail = FALSE), from = 0, to = max(rt.exp), ylim=c(0,1))
par(new=FALSE)
plot(result.KM.exp) # plot the Kaplan-Meier estimate curve
abline(v=0.4, col='red2',lty=4)
par(new=TRUE)
curve(pexp(x, rate = rate, lower.tail = FALSE), from = 0, to = max(rt.exp), ylim=c(0,1))
par(new=FALSE)
plot(result.KM.exp) # plot the Kaplan-Meier estimate curve
abline(v=0.4, col='red2',lty=5)
par(new=TRUE)
curve(pexp(x, rate = rate, lower.tail = FALSE), from = 0, to = max(rt.exp), ylim=c(0,1))
par(new=FALSE)
plot(result.KM.exp) # plot the Kaplan-Meier estimate curve
abline(v=0.4, col='red2',lty=2)
par(new=TRUE)
curve(pexp(x, rate = rate, lower.tail = FALSE), from = 0, to = max(rt.exp), ylim=c(0,1))
par(new=FALSE)
num=20
rate=0.8
rt.exp <- rexp(num,rate) # rt: recorded time
ct.exp <-  rep(1,num)# ct: censored time
# produce a special structure for censored survival data
result.KM.exp <- survfit(Surv(rt.exp, ct.exp) ~ 1, conf.type = "log-log")
# compute confidence intervals based on log-log transformation
# summary(result.KM.exp) # see the full Kaplan-Meier estimate
plot(result.KM.exp, ylab = NULL) # plot the Kaplan-Meier estimate curve
abline(v=0.4, col='red2',lty=2)
par(new=TRUE)
curve(pexp(x, rate = rate, lower.tail = FALSE), from = 0, to = max(rt.exp), ylim=c(0,1))
par(new=FALSE)
num=20
rate=0.8
rt.exp <- rexp(num,rate) # rt: recorded time
ct.exp <-  rep(1,num)# ct: censored time
# produce a special structure for censored survival data
result.KM.exp <- survfit(Surv(rt.exp, ct.exp) ~ 1, conf.type = "log-log")
# compute confidence intervals based on log-log transformation
# summary(result.KM.exp) # see the full Kaplan-Meier estimate
plot(result.KM.exp, ylab = NULL) # plot the Kaplan-Meier estimate curve
abline(v=0.8, col='red2',lty=2)
par(new=TRUE)
curve(pexp(x, rate = rate, lower.tail = FALSE), from = 0, to = max(rt.exp), ylim=c(0,1))
par(new=FALSE)
plot(result.KM.exp) # plot the Kaplan-Meier estimate curve
abline(v=0.8, col='red2',lty=2)
par(new=TRUE)
curve(pexp(x, rate = rate, lower.tail = FALSE), from = 0, to = max(rt.exp), ylim=c(0,1))
par(new=FALSE)
plot(result.KM.exp, ylab = NULL) # plot the Kaplan-Meier estimate curve
abline(v=0.8, col='red2',lty=2)
par(new=TRUE)
curve(pexp(x, rate = rate, lower.tail = FALSE), from = 0, to = max(rt.exp), ylim=c(0,1))
par(new=FALSE)
max(c(1,2),c(0,3))
plot(result.KM.exp, ylab = "S(t)", xlab = "t",
xlim = c(0,0.8,max(rt.exp,ct.exp))) # plot the Kaplan-Meier estimate curve
abline(v=0.8, col='red2',lty=2)
par(new=TRUE)
curve(pexp(x, rate = rate, lower.tail = FALSE), from = 0, to = max(rt.exp), ylim=c(0,1))
par(new=FALSE)
result.KM.exp$call
plot(result.KM.exp, ylab = "S(t)", xlab = "t",
) # plot the Kaplan-Meier estimate curve
abline(v=0.8, col='red2',lty=2)
par(new=TRUE)
curve(pexp(x, rate = rate, lower.tail = FALSE), from = 0, to = max(rt.exp), ylim=c(0,1))
par(new=FALSE)
plot(result.KM.exp, ylab = "S(t)", xlab = "t",
xaxs = c(0,0.8,max(rt.exp,ct.exp))) # plot the Kaplan-Meier estimate curve
abline(v=0.8, col='red2',lty=2)
par(new=TRUE)
curve(pexp(x, rate = rate, lower.tail = FALSE), from = 0, to = max(rt.exp), ylim=c(0,1))
par(new=FALSE)
plot(result.KM.exp) # plot the Kaplan-Meier estimate curve
abline(v=0.8, col='red2',lty=2)
par(new=TRUE)
curve(pexp(x, rate = rate, lower.tail = FALSE), from = 0, to = max(rt.exp), ylim=c(0,1))
par(new=FALSE)
plot(result.KM.exp, ann = FALSE) # plot the Kaplan-Meier estimate curve
abline(v=0.8, col='red2',lty=2)
par(new=TRUE)
curve(pexp(x, rate = rate, lower.tail = FALSE), from = 0, to = max(rt.exp), ylim=c(0,1))
par(new=FALSE)
plot(result.KM.exp, xaxt = "n", yaxt = "n") # plot the Kaplan-Meier estimate curve
abline(v=0.8, col='red2',lty=2)
par(new=TRUE)
curve(pexp(x, rate = rate, lower.tail = FALSE), from = 0, to = max(rt.exp), ylim=c(0,1))
par(new=FALSE)
plot(result.KM.exp, xaxt = "n", yaxt = "n")
abline(v=0.8, col='red2',lty=2)
par(new=TRUE)
curve(pexp(x, rate = rate, lower.tail = FALSE), from = 0, to = max(rt.exp), ylim=c(0,1))
par(new=FALSE)
curve(pexp(x, rate = rate, lower.tail = FALSE), from = 0, to = max(rt.exp), ylim=c(0,1))
plot(result.KM.exp) #
plot(result.KM.exp) # plot the Kaplan-Meier estimate curve
abline(v=0.8, col='red2',lty=2)
par(new=TRUE)
curve(pexp(x, rate = rate, lower.tail = FALSE), from = 0, to = max(rt.exp),
ylim=c(0,1), ann = FALSE)
par(new=FALSE)
plot(result.KM.exp) # plot the Kaplan-Meier estimate curve
abline(v=0.8, col='red2',lty=2)
par(new=TRUE)
curve(pexp(x, rate = rate, lower.tail = FALSE), from = 0, to = max(rt.exp),
ylim=c(0,1), ann = FALSE, xaxt = "n")
par(new=FALSE)
plot(result.KM.exp) # plot the Kaplan-Meier estimate curve
abline(v=0.8, col='red2',lty=2)
par(new=TRUE)
curve(pexp(x, rate = rate, lower.tail = FALSE), from = 0, to = max(rt.exp),
ylim=c(0,1), ann = FALSE, xaxt = "n", yaxt = "n")
par(new=FALSE)
plot(result.KM.exp)
plot(result.KM.exp, xaxt = "n", yaxt = "n") # plot the Kaplan-Meier estimate curve
abline(v=0.8, col='red2',lty=2)
par(new=TRUE)
curve(pexp(x, rate = rate, lower.tail = FALSE), from = 0, to = max(rt.exp),
ylim=c(0,1), ann = FALSE, xaxt = "n", yaxt = "n")
par(new=FALSE)
plot(result.KM.exp, xaxt = "n") # plot the Kaplan-Meier estimate curve
abline(v=0.8, col='red2',lty=2)
par(new=TRUE)
curve(pexp(x, rate = rate, lower.tail = FALSE), from = 0, to = max(rt.exp),
ylim=c(0,1), ann = FALSE, xaxt = "n", yaxt = "n")
axis(1,c(0,0.8,floor(max(rt.exp))))
par(new=FALSE)
plot(result.KM.exp, xaxt = "n", las=1) # plot the Kaplan-Meier estimate curve
abline(v=0.8, col='red2',lty=2)
par(new=TRUE)
curve(pexp(x, rate = rate, lower.tail = FALSE), from = 0, to = max(rt.exp),
ylim=c(0,1), ann = FALSE, xaxt = "n", yaxt = "n")
axis(1,c(0,0.8,floor(max(rt.exp))))
par(new=FALSE)
plot(result.KM.exp, xaxt = "n", las=1) # plot the Kaplan-Meier estimate curve
abline(v=0.8, col='red2',lty=2)
par(new=TRUE)
curve(pexp(x, rate = rate, lower.tail = FALSE), col="blue", lwd = 2,
from = 0, to = max(rt.exp), =c(0,1), ann = FALSE, xaxt = "n", yaxt = "n")
axis(1,c(0,0.8,floor(max(rt.exp))))
par(new=FALSE)
plot(result.KM.exp, xaxt = "n", las=1) # plot the Kaplan-Meier estimate curve
abline(v=0.8, col='red2',lty=2)
par(new=TRUE)
curve(pexp(x, rate = rate, lower.tail = FALSE), col="blue", lwd = 2,
from = 0, to = max(rt.exp), ylim=c(0,1),
ann = FALSE, xaxt = "n", yaxt = "n")
axis(1,c(0,0.8,floor(max(rt.exp))))
par(new=FALSE)
plot(result.KM.exp, xaxt = "n", las=1) # plot the Kaplan-Meier estimate curve
abline(v=0.8, col='red2',lty=2)
par(new=TRUE)
curve(pexp(x, rate = rate, lower.tail = FALSE), col="blue", lwd = 1,
from = 0, to = max(rt.exp), ylim=c(0,1),
ann = FALSE, xaxt = "n", yaxt = "n")
axis(1,c(0,0.8,floor(max(rt.exp))))
par(new=FALSE)
plot(result.KM.exp, xaxt = "n", las=1) # plot the Kaplan-Meier estimate curve
abline(v=0.8, col='red2',lty=2)
par(new=TRUE)
curve(pexp(x, rate = rate, lower.tail = FALSE), col="blue", lwd = 1.5,
from = 0, to = max(rt.exp), ylim=c(0,1),
ann = FALSE, xaxt = "n", yaxt = "n")
axis(1,c(0,0.8,floor(max(rt.exp))))
par(new=FALSE)
plot(result.KM.exp, xaxt = "n", las=1) # plot the Kaplan-Meier estimate curve
abline(v=0.8, col='red2',lty=2)
par(new=TRUE)
curve(pexp(x, rate = rate, lower.tail = FALSE), col="blue", lwd = 1.2,
from = 0, to = max(rt.exp), ylim=c(0,1),
ann = FALSE, xaxt = "n", yaxt = "n")
axis(1,c(0,0.8,floor(max(rt.exp))))
par(new=FALSE)
plot(result.KM.exp, xaxt = "n", las=1) # plot the Kaplan-Meier estimate curve
abline(v=0.8, col='red2',lty=2)
par(new=TRUE)
curve(pexp(x, rate = rate, lower.tail = FALSE), col="blue", lwd = 1.3,
from = 0, to = max(rt.exp), ylim=c(0,1),
ann = FALSE, xaxt = "n", yaxt = "n")
axis(1,c(0,0.8,floor(max(rt.exp))))
par(new=FALSE)
png("pic(1).png")
plot(result.KM.exp, xaxt = "n", las=1) # plot the Kaplan-Meier estimate curve
abline(v=0.8, col='red2',lty=2)
par(new=TRUE)
curve(pexp(x, rate = rate, lower.tail = FALSE), col="blue", lwd = 1.3,
from = 0, to = max(rt.exp), ylim=c(0,1),
ann = FALSE, xaxt = "n", yaxt = "n")
axis(1,c(0,0.8,floor(max(rt.exp))))
par(new=FALSE)
dev.off()
num=20
rate=0.8
rt.exp <- rexp(num,rate) # rt: recorded time
ct.exp <-  rep(1,num)# ct: censored time
# produce a special structure for censored survival data
result.KM.exp <- survfit(Surv(rt.exp, ct.exp) ~ 1, conf.type = "log-log")
plot(result.KM.exp, xaxt = "n", las=1) # plot the Kaplan-Meier estimate curve
abline(v=0.8, col='red2',lty=2)
par(new=TRUE)
curve(pexp(x, rate = rate, lower.tail = FALSE), col="blue", lwd = 1.3,
from = 0, to = max(rt.exp), ylim=c(0,1),
ann = FALSE, xaxt = "n", yaxt = "n")
axis(1,c(0,0.8,floor(max(rt.exp))))
par(new=FALSE)
rt.exp <- rexp(num,rate) # rt: recorded time
ct.exp <-  rep(1,num)# ct: censored time
# produce a special structure for censored survival data
result.KM.exp <- survfit(Surv(rt.exp, ct.exp) ~ 1, conf.type = "log-log")
# compute confidence intervals based on log-log transformation
# summary(result.KM.exp) # see the full Kaplan-Meier estimate
# png("pic(2).png")
plot(result.KM.exp, xaxt = "n", las=1) # plot the Kaplan-Meier estimate curve
abline(v=0.8, col='red2',lty=2)
par(new=TRUE)
curve(pexp(x, rate = rate, lower.tail = FALSE), col="blue", lwd = 1.3,
from = 0, to = max(rt.exp), ylim=c(0,1),
ann = FALSE, xaxt = "n", yaxt = "n")
axis(1,c(0,0.8,floor(max(rt.exp))))
par(new=FALSE)
rt.exp <- rexp(num,rate) # rt: recorded time
ct.exp <-  rep(1,num)# ct: censored time
# produce a special structure for censored survival data
result.KM.exp <- survfit(Surv(rt.exp, ct.exp) ~ 1, conf.type = "log-log")
# compute confidence intervals based on log-log transformation
# summary(result.KM.exp) # see the full Kaplan-Meier estimate
# png("pic(2).png")
plot(result.KM.exp, xaxt = "n", las=1) # plot the Kaplan-Meier estimate curve
abline(v=0.8, col='red2',lty=2)
par(new=TRUE)
curve(pexp(x, rate = rate, lower.tail = FALSE), col="blue", lwd = 1.3,
from = 0, to = max(rt.exp), ylim=c(0,1),
ann = FALSE, xaxt = "n", yaxt = "n")
axis(1,c(0,0.8,floor(max(rt.exp))))
par(new=FALSE)
png("pic(2).png")
plot(result.KM.exp, xaxt = "n", las=1) # plot the Kaplan-Meier estimate curve
abline(v=0.8, col='red2',lty=2)
par(new=TRUE)
curve(pexp(x, rate = rate, lower.tail = FALSE), col="blue", lwd = 1.3,
from = 0, to = max(rt.exp), ylim=c(0,1),
ann = FALSE, xaxt = "n", yaxt = "n")
axis(1,c(0,0.8,floor(max(rt.exp))))
par(new=FALSE)
dev.off()
N <- c(15,16,17,18,19,20)
freq <- c(0.87,0.91,0.90,0.96,0.93,0.94)
plot(N,freq,xaxt = "n",yaxt = "n")
N <- c(15,16,17,18,19,20)
freq <- c(0.87,0.91,0.90,0.96,0.93,0.94)
plot(N,freq,ann = FALSE, xaxt = "n",yaxt = "n")
N <- c(15,16,17,18,19,20)
freq <- c(0.87,0.91,0.90,0.96,0.93,0.94)
plot(N,freq,ann = FALSE, xaxt = "n")
seq(0.8,1,0.05)
N <- c(15,16,17,18,19,20)
freq <- c(0.87,0.91,0.90,0.96,0.93,0.94)
plot(N,freq,ann = FALSE, xaxt = "n",yaxt = "n",xlim = c(min(N),max(N)+2),
ylim = c(0.8,1))
N <- c(15,16,17,18,19,20)
freq <- c(0.87,0.91,0.90,0.96,0.93,0.94)
plot(N,freq,xlim = c(min(N),max(N)+2),
ylim = c(0.8,1))
# axis(1,min(N):(max(N)+2))
# axis(2,seq(0.8,1,0.05))
N <- c(15,16,17,18,19,20)
freq <- c(0.87,0.91,0.90,0.96,0.93,0.94)
plot(N,freq,ann = FALSE, xlim = c(min(N),max(N)+2),
ylim = c(0.8,1))
plot(N,freq,ann = FALSE, xlim = c(min(N),max(N)+2, ),ylim = c(0.8,1),las=1)
plot(N,freq,ann = FALSE, xlim = c(min(N),max(N)+2),ylim = c(0.8,1),las=1)
plot(N,freq,type = 'b',ann = FALSE, xlim = c(min(N),max(N)+2),ylim = c(0.8,1),las=1)
plot(N,freq,ann = FALSE, xlim = c(min(N),max(N)+2),ylim = c(0.8,1),las=1)
lines(N,freq)
png("pic(3).png")
plot(N,freq,ann = FALSE, xlim = c(min(N),max(N)+2),ylim = c(0.8,1),las=1)
dev.off()
png("pic(4).png")
plot(N,freq,ann = FALSE, xlim = c(min(N),max(N)+2),ylim = c(0.8,1),las=1)
lines(N,freq)
dev.off()
plot(N,freq,ann = FALSE, xlim = c(min(N),max(N)+2),ylim = c(0.8,1),las=1,
xlab = "n", ylab = "Frequency")
plot(N,freq, xlim = c(min(N),max(N)+2),ylim = c(0.8,1),las=1,
xlab = "n", ylab = "Frequency")
png("pic(3).png")
plot(N,freq, xlim = c(min(N),max(N)+2),ylim = c(0.8,1),las=1,
xlab = "n", ylab = "Frequency")
dev.off()
png("pic(4).png")
plot(N,freq, xlim = c(min(N),max(N)+2),ylim = c(0.8,1),las=1,
xlab = "n", ylab = "Frequency")
lines(N,freq)
dev.off()
